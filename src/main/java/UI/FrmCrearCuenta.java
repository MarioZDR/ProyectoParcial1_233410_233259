/*
 * FrmCrearCuenta.java creada el 20/02/2023.
 */
package UI;

import dominio.Usuario;
import excepciones.PersistenciaException;
import implementaciones.ClientesDAO;
import interfaces.IClientesDAO;
import interfaces.ICuentasDAO;
import interfaces.IDireccionesDAO;
import interfaces.ITransaccionesDAO;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import validadores.Validador;

/**
 * Este frame se utiliza para la creación de cuentas.
 *
 * @author 00000233259 y 00000233410.
 */
public class FrmCrearCuenta extends javax.swing.JFrame {

    /**
     * Este atributo se utiliza para llevar un registro cronológicamente de los
     * datos.
     */
    private static final Logger LOG = Logger.getLogger(ClientesDAO.class.getName());
    /**
     * Este atributo representa la DAO de Clientes.
     */
    public final IClientesDAO clientesDAO;
    /**
     * Este atributo representa la DAO de Direcciones.
     */
    public final IDireccionesDAO direccionesDAO;
    /**
     * Este atributo representa la DAO de Transacciones.
     */
    public final ITransaccionesDAO transaccionesDAO;
    /**
     * Este atributo representa la DAO de Cuentas.
     */
    public final ICuentasDAO cuentasDAO;
    /**
     * Este atributo representa el usuario logeado actualmente.
     */
    private Usuario usuarioLogeado;
    /**
     * Este atributo representa el validador de campos.
     */
    private Validador validadores;

    /**
     * Método constructor que inicializa los atributos al valor de sus
     * parámetros.
     *
     * @param clientesDAO representa la DAO de Clientes.
     * @param direccionesDAO representa la DAO de Direcciones.
     * @param transaccionesDAO representa la DAO de Transacciones.
     * @param cuentasDAO representa la DAO de Cuentas.
     * @param usuarioLogeado representa el usuario actual.
     */
    public FrmCrearCuenta(IClientesDAO clientesDAO, IDireccionesDAO direccionesDAO, ITransaccionesDAO transaccionesDAO, ICuentasDAO cuentasDAO, Usuario usuarioLogeado) {
        this.clientesDAO = clientesDAO;
        this.direccionesDAO = direccionesDAO;
        this.transaccionesDAO = transaccionesDAO;
        this.cuentasDAO = cuentasDAO;
        this.usuarioLogeado = usuarioLogeado;
        this.validadores = new Validador();
        initComponents();
        this.setSize(450, 250);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
    }

    /**
     * Este método realiza la operación de crear una cuenta.
     */
    public void crearCuenta() {
        try {
            String nombre = extraerDatos();
            cuentasDAO.crear(nombre, usuarioLogeado.getCliente().getId());
            mostrarMensaje("Cuenta creada exitosamente");
        } catch (PersistenciaException ex) {
            mostrarMensaje(ex.getMessage());
            Logger.getLogger(FrmCrearCuenta.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Este método realiza la extracción de datos de la interfaz de usuario.
     * @return Regresa el nombre de la cuenta extraido.
     * @throws PersistenciaException Se lanza en caso de ocurrir 
     * un error en la capa de persistencia.
     */
    public String extraerDatos() throws PersistenciaException {
        try {
            validarDatos();
        } catch (PersistenciaException ex) {
            Logger.getLogger(FrmCrearCuenta.class.getName()).log(Level.SEVERE, null, ex);
            throw new PersistenciaException(ex.getMessage());
        }
        return this.txtNombreCuenta.getText();
    }

    /**
     * Este método realiza la validación de datos ingresados.
     * @throws PersistenciaException Se lanza en caso de ocurrir 
     * un error en la capa de persistencia.
     */
    public void validarDatos() throws PersistenciaException {
        if (this.txtNombreCuenta.getText().trim().equals("")) {
            throw new PersistenciaException("Ingresa un nombre de cuenta");
        }
        validadores.validarNombreCuenta(txtNombreCuenta.getText());

    }

    /**
     * Este método muestra un mensaje en un JOptionPane.
     * @param msj El mensaje a mostrar.
     */
    private void mostrarMensaje(String msj) {
        JOptionPane.showMessageDialog(null, msj, "Info", JOptionPane.INFORMATION_MESSAGE);
    }

    /**
     * Este método regresa al menú principal.
     */
    private void regresarMenu() {
        FrmMenu frmMenu = new FrmMenu(clientesDAO, direccionesDAO, transaccionesDAO, cuentasDAO, usuarioLogeado);
        this.setVisible(false);
        frmMenu.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpnFondo = new javax.swing.JPanel();
        lblCrearCuenta = new javax.swing.JLabel();
        lblSeleccionarCuenta = new javax.swing.JLabel();
        btnRegresar = new javax.swing.JButton();
        btnCrearCuenta = new javax.swing.JButton();
        txtNombreCuenta = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpnFondo.setBackground(new java.awt.Color(12, 28, 68));
        jpnFondo.setForeground(new java.awt.Color(12, 28, 68));
        jpnFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCrearCuenta.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 50)); // NOI18N
        lblCrearCuenta.setForeground(new java.awt.Color(255, 255, 255));
        lblCrearCuenta.setText("Crear cuenta");
        jpnFondo.add(lblCrearCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        lblSeleccionarCuenta.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 14)); // NOI18N
        lblSeleccionarCuenta.setForeground(new java.awt.Color(255, 255, 255));
        lblSeleccionarCuenta.setText("Nombre de la cuenta:");
        jpnFondo.add(lblSeleccionarCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        btnRegresar.setBackground(new java.awt.Color(183, 210, 242));
        btnRegresar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jpnFondo.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        btnCrearCuenta.setBackground(new java.awt.Color(65, 103, 158));
        btnCrearCuenta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCrearCuenta.setForeground(new java.awt.Color(255, 255, 255));
        btnCrearCuenta.setText("Crear cuenta");
        btnCrearCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearCuentaActionPerformed(evt);
            }
        });
        jpnFondo.add(btnCrearCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, 120, 40));
        jpnFondo.add(txtNombreCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 122, 280, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnFondo, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpnFondo, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Este evento ocurre cuando un usuario da un click en el botón y se
     * regresa al menú.
     * @param evt Evento al dar click en el botón.
     */
    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        FrmMenu frmMenu = new FrmMenu(clientesDAO, direccionesDAO, transaccionesDAO, cuentasDAO, usuarioLogeado);
        this.setVisible(false);
        frmMenu.setVisible(true);
    }//GEN-LAST:event_btnRegresarActionPerformed
    /**
     * Este evento ocurre cuando un usuario da un click en el botón y se llama
     * al método que crea la cuenta.
     *
     * @param evt Evento al dar click en el botón.
     */
    private void btnCrearCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearCuentaActionPerformed
        crearCuenta();
    }//GEN-LAST:event_btnCrearCuentaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearCuenta;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JPanel jpnFondo;
    private javax.swing.JLabel lblCrearCuenta;
    private javax.swing.JLabel lblSeleccionarCuenta;
    private javax.swing.JTextField txtNombreCuenta;
    // End of variables declaration//GEN-END:variables
}
